# fit a linear model for G3 using absences
absences_linear_model <- lm(G3 ~ absences, data=uci_data)
# get coefficients from model
absences_parameters = tidy(absences_linear_model)$estimate
# calculate predictions from model
absences_model_data <- uci_data %>%
mutate(
absences_lm_prediction = absences_parameters[1] + absences_parameters[2] * uci_data$absences
)
# plot data and predictions
ggplot(absences_model_data , aes(absences)) +
geom_point(aes(y = G3)) +
geom_line(aes(y = absences_lm_prediction), size = 1, color = "red")
cor(as.numeric(uci_data$absences), uci_data$G3)
# get predicted value by model
absences_lm_function <- function(a, data) {
a[1] + data$absences * a[2]
}
# measure distance between actual and predicted using root-mean-squared deviation
absences_measure_distance <- function(mod_params, data) {
diff <- data$G3 - absences_lm_function(mod_params, data)
sqrt(mean(diff ^ 2))
}
# minimize distance between to find best model using root-mean-squared deviation
absences_best <- optim(c(0, 0), absences_measure_distance, data = absences_model_data)
# values for the coefficients
absences_best$par
# coefficients of lm()
absences_parameters
# measure distance between actual and predicted using mean absolute deviation
absences_measure_mad <- function(mod_params, data) {
diff <- data$G3 - absences_lm_function(mod_params, data)
mean(abs(diff))
}
# minimize distances to find best model using mad
absences_mad_fit <- optim(c(0, 0), absences_measure_mad, data = absences_model_data)
# values for mad coefficients
absences_mad_fit$par
# add mad predictions to data
absences_model_data <- absences_model_data %>%
mutate(lm_mad_prediction = absences_mad_fit$par[1] + absences_mad_fit$par[2] * uci_data$absences)
# plot mad model
ggplot(absences_model_data , aes(absences)) +
geom_point(aes(y = G3)) +
geom_line(aes(y = lm_mad_prediction), size = 1, color = "red")
# add both sets of residuals to data
absences_model_data <- absences_model_data %>%
mutate(
residuals_lm = G3 - absences_lm_prediction,
residuals_mad = G3 - lm_mad_prediction
)
# plot residuals
ggplot(absences_model_data, aes(absences)) +
geom_point(aes(y=residuals_lm), size = 1) +
geom_point(aes(y=residuals_mad), color = "red", size = 1) +
geom_abline(intercept=0, slope = 0)
# skipped vs colGPA plot
skip_plot <- ggplot(mich_data, aes(x = skipped, y = colGPA, size=alcohol))  +
geom_point()
skip_plot
# skipped vs colGPA linear model
linearMod_skip <- lm(colGPA ~ skipped, data=mich_data)
# coefficients from model
skipped_parameters <- tidy(linearMod_skip)$estimate
# scatterplot with linear model
skip_plot + geom_abline(slope=skipped_parameters[2], intercept = skipped_parameters[1], size = 1, color = "red")
# correlation
cor(mich_data$skipped,mich_data$colGPA)
#Class_skipped analysis
missed_linear_model <- lm(GPA ~ ClassesMissed, data = sleep_data)
missed_parameters <- tidy(missed_linear_model)$estimate
sleep_data_small <- sleep_data %>%
dplyr::select(ClassesMissed, GPA) %>%
mutate(missed_lm_prediction = missed_parameters[1] + missed_parameters[2] * sleep_data$ClassesMissed)
ggplot(sleep_data_small , aes(ClassesMissed)) +
geom_point(aes(y= GPA)) +
geom_line(aes(y= missed_lm_prediction), size = 1, colour = "red")
missed_lm_function <- function(a, data) {
a[1] + data$ClassesMissed * a[2]
}
missed_measure_distance <- function(mod_params, data) {
diff <- data$GPA - missed_lm_function(mod_params, data)
sqrt(mean(diff ^ 2))
}
# line fit with squares of the residuals
missed_best <- optim(c(3.4, 0), missed_measure_distance, data = sleep_data_small)
# values for the coefficients
missed_best$par
# from lm() function
missed_parameters
missed_measure_distance_mad <- function(mod_params, data) {
diff <- data$GPA - missed_lm_function(mod_params, data)
mean(abs(diff))
}
# make use of a different distance function here (such as mean absolute)
missed_mad_fit <- optim(c(3.4, 0), missed_measure_distance_mad, data = sleep_data_small)
missed_mad_fit$par
sleep_data_small <- sleep_data_small %>%
mutate(lm_mad = missed_mad_fit$par[1] + missed_mad_fit$par[2] * sleep_data$ClassesMissed)
sleep_data_small <- sleep_data_small %>%
mutate(
residuals_mad = GPA - lm_mad,
residuals = GPA - missed_lm_prediction
)
# plot the residuals to compare them
ggplot(sleep_data_small, aes(ClassesMissed)) +
geom_point(aes(y=residuals), size = 1) +
geom_point(aes(y=residuals_mad), color = "red", size = 1) +
geom_abline(intercept=0, slope = 0)
cor(sleep_data$ClassesMissed, sleep_data$GPA)
cor(sleep_data$ClassesMissed, sleep_data$Drinks)
model_linear_function <- function(a, data) {
a[1] + data$Drinks * a[2]
}
drinks_lm_function = model_linear_function
drinks_measure_distance_mad <- function(mod_params, data) {
diff <- data$GPA - drinks_lm_function(mod_params, data)
mean(abs(diff))
}
# use mean absolute function to get distance
drinks_mad_fit <- optim(c(3.4, 0), drinks_measure_distance_mad, data = sleep_data)
drinks_mad_fit$par
sleep_data_small <- sleep_data_small %>%
mutate(
residuals_mad = GPA - lm_mad,
residuals = GPA - lm_mad
)
# plot the residuals to compare them
ggplot(sleep_data_small, aes(Drinks)) +
geom_point(aes(y=residuals), size = 1) +
geom_point(aes(y=residuals_mad), size = 1, color = "red") +
geom_abline(intercept=0, slope = 0)
View(sleep_data_small)
sleep_data_small <- sleep_data %>%
mutate(
residuals_mad = GPA - lm_mad,
residuals = GPA - lm_mad
)
sleep_data_small <- sleep_data %>%
mutate(lm_mad = drinks_mad_fit$par[1] + drinks_mad_fit$par[2] * sleep_data$Drinks)
ggplot(sleep_data_small , aes(Drinks)) +
geom_point(aes(y= GPA), size = 1) +
geom_line(aes(y= lm_mad), size = 1, colour = "red")
sleep_data_small <- sleep_data_small %>%
mutate(
residuals_mad = GPA - lm_mad,
residuals = GPA - lm_mad
)
# plot the residuals to compare them
ggplot(sleep_data_small, aes(Drinks)) +
geom_point(aes(y=residuals), size = 1) +
geom_point(aes(y=residuals_mad), size = 1, color = "red") +
geom_abline(intercept=0, slope = 0)
sleep_data_small <- sleep_data_small %>%
mutate(
residuals_mad = GPA - lm_mad,
residuals = GPA - lm_mad
)
# plot the residuals to compare them
ggplot(sleep_data_small, aes(Drinks)) +
geom_point(aes(y=residuals_mad), size = 1) +
geom_abline(intercept=0, slope = 0)
ab_data2 <- ab_data2[c(2:4),]
if(!require(dplyr)){install.packages("dplyr"); require(dplyr)}
if(!require(dplyr)){install.packages("dplyr"); require(dplyr)}
library(ggplot2)
ab_data <- read.csv("./antibiotics_data.csv", stringsAsFactors = FALSE)
library(reshape2)
ab_data$Penicilin <- 1.0 / ab_data$Penicilin
ab_data$Streptomycin <- 1.0 / ab_data$Streptomycin
ab_data$Neomycin <- 1.0 / ab_data$Neomycin
ab_data2 <- t(ab_data)
colnames(ab_data2) <- ab_data$Bacteria
ab_data2 <- ab_data2[c(2:4),]
ab_data3 <- melt(ab_data2, id.vars = "row")
colnames(ab_data3) <- c("Treatment", "Bacteria", "Effectiveness")
# ab_data3$Effectiveness <- as.factor(1.0 / as.numeric(ab_data3$Effectiveness))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Treatment, order=Treatment)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ab_data <- read.csv("./antibiotics_data.csv", stringsAsFactors = FALSE)
ab_data <- read.csv("./antibiotics_data.csv", stringsAsFactors = FALSE)
setwd("C:/Users/lee/Desktop/474")
ab_data <- read.csv("./antibiotics_data.csv", stringsAsFactors = FALSE)
library(reshape2)
ab_data$Penicilin <- 1.0 / ab_data$Penicilin
ab_data$Streptomycin <- 1.0 / ab_data$Streptomycin
ab_data$Neomycin <- 1.0 / ab_data$Neomycin
ab_data2 <- t(ab_data)
colnames(ab_data2) <- ab_data$Bacteria
ab_data2 <- ab_data2[c(2:4),]
ab_data3 <- melt(ab_data2, id.vars = "row")
colnames(ab_data3) <- c("Treatment", "Bacteria", "Effectiveness")
View(ab_data3)
View(ab_data3)
View(ab_data3)
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Treatment, order=Treatment)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Bacteria, order=Treatment)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Bacteria, order=Bacteria)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Treatment, y = as.numeric(ab_data3$Effectiveness), fill=Bacteria, order=Bacteria)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Treatment, order=Bacteria)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Treatment, order=Bacteria, position = position_dodge(width=0.5))) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), fill=Treatment, order=Bacteria), position = position_dodge(width=0.5)) +
geom_bar(stat="identity") +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness), order=Bacteria), position = position_dodge(width=0.5)) +
geom_bar(stat="identity", aes(fill=Treatment)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness)), position = position_dodge(width=0.5)) +
geom_bar(stat="identity", aes(fill=Treatment)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment), position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment), position = position_dodge(width=0.3)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment), position = position_dodge(width=0.7)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment), position = position_dodge(width=1)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment), position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
log10(100)
log10(ab_data$Penicilin)
ab_data$Penicilin <- log10(ab_data$Penicilin)
ab_data$Streptomycin <- log10(ab_data$Streptomycin)
ab_data$Neomycin <- log10(ab_data$Neomycin)
ab_data2 <- t(ab_data)
colnames(ab_data2) <- ab_data$Bacteria
ab_data2 <- ab_data2[c(2:4),]
ab_data3 <- melt(ab_data2, id.vars = "row")
colnames(ab_data3) <- c("Treatment", "Bacteria", "Effectiveness")
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Relative Minimum Effective Dosage\nSize to be Effective") +
ggtitle("Relative Effectiveness of Antibiotics on Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y = element_blank(), axis.ticks = element_blank())
ab_data3 <- melt(ab_data2, id.vars = "row")
colnames(ab_data3) <- c("Treatment", "Bacteria", "Effectiveness")
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.text.y =(ifelse(log10(at.y) %% 1 == 0, at.y, NA)), axis.ticks = element_blank())
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(formatter='log10')
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = breaks, labels = comma(breaks, digits = 1))
breaks = 10**(1:10 * 0.5)
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = breaks, labels = comma(breaks, digits = 1))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = breaks, labels = breaks)
breaks
10**(1:10 * 0.5)
10**(1:10)
breaks = 10**(-11:10)
breaks
breaks = 10**(-1:10)
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = breaks, labels = breaks)
breaks
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = breaks, labels = c(0.1, 1, 10))
breaks
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks = c(0.1, 1, 10), labels = c(0.1, 1, 10))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y(breaks = c(0.1, 1, 10), labels = c(0.1, 1, 10))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) #+
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale(breaks = c(0, 1,3, 6, 9, 12 ), labels = c(0.1, 1, 1000, 1000000, "1million", "100million"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale(breaks = c(0, 1,3, 6, 9, 12 ), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale(breaks =  c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale(breaks =  breaks, labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(breaks =  c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_log10(breaks =  c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(breaks =  c(0.1, 1, 3, 6, 9, 12), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL by log10") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(breaks =  c(0.1, 1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(breaks =  c(0.1, 1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.ticks = element_blank()) +
scale_y_continuous(breaks =  c(0.1, 1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.3, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics on 1mL of Bacteria") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(ab_data3, aes(x = ab_data3$Bacteria, y = as.numeric(ab_data3$Effectiveness))) +
geom_bar(stat="identity", aes(fill=Treatment),width = 0.5, position = position_dodge(width=0.5)) +
xlab("Bacteria") +
ylab("Minimum Effective Dosage\nin mL per mL of infection") +
ggtitle("Effective Dosage of Antibiotics for 1mL of Bacteria") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_y_continuous(breaks =  c(0.1, 3, 6, 9, 12, 15, 18, 24, 30), labels = c(0.1, 1000, 1000000, 1000000000, 1000000000000, 10 ** 15, 10**18, 10**24, 10**30)) +
theme(panel.border = element_blank(), panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
